version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nhandare_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: nhandare_gaming
      POSTGRES_USER: nhandare_user
      POSTGRES_PASSWORD: nhandare_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - nhandare_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nhandare_user -d nhandare_gaming"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: nhandare_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - nhandare_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nhandare Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: nhandare_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://nhandare_user:nhandare_password@postgres:5432/nhandare_gaming?schema=public
      REDIS_URL: redis://:redis_password@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRE: 7d
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:8081}
      ADMIN_PANEL_URL: ${ADMIN_PANEL_URL:-http://localhost:3000}
      SOCKET_CORS_ORIGIN: ${SOCKET_CORS_ORIGIN:-http://localhost:8081}
      PESEPAY_INTEGRATION_KEY: ${PESEPAY_INTEGRATION_KEY:-42bbe2de-5e6c-4350-b16a-2805314ce5cb}
      PESEPAY_ENCRYPTION_KEY: ${PESEPAY_ENCRYPTION_KEY:-de45125120d645f68c0a9c2ffab06b31}
      PESEPAY_API_URL: https://api.pesepay.com/api/payments-engine
      PESEPAY_ENVIRONMENT: production
      LOG_LEVEL: info
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      BCRYPT_ROUNDS: 12
      CHESS_AI_DIFFICULTY: random
      TOURNAMENT_MAX_PLAYERS: 64
      DEFAULT_CURRENCY: USD
      SUPPORTED_CURRENCIES: USD,ZWL
      ZIMBABWE_PHONE_PREFIX: +263
      MIN_TOURNAMENT_ENTRY_FEE: 1
      MAX_TOURNAMENT_ENTRY_FEE: 100
      PLATFORM_FEE_PERCENTAGE: 0.2
      MIN_PRIZE_PAYOUT_PERCENTAGE: 0.7
      MAX_FILE_SIZE: 5242880
      UPLOAD_PATH: ./uploads
    ports:
      - "3001:3001"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nhandare_network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3001/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: nhandare_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - nhandare_network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  nhandare_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
